Q1.
ANS:- SELECT name, salary FROM Employees ORDER BY salary DESC;


Q2.
ANS:-SELECT * FROM Employees ORDER BY salary DESC LIMIT 5;


Q3.
ANS:-SELECT * FROM Employees LIMIT 5 OFFSET 3;


Q4.
ANS:- SELECT department, COUNT(*) FROM Employees GROUP BY department;


Q5.
ANS:- SELECT department, AVG(salary) 
FROM Employees 
GROUP BY department 
HAVING AVG(salary) > 50000;


Q6.
ANS:- SELECT * FROM Products WHERE product_name LIKE '%Laptop%';


Q7.
ANS:- SELECT SUBSTRING(student_name, 1, 3) FROM Students;


Q8.
ANS:- SELECT * FROM Students WHERE student_name start='A';

Q9.
ANS:- SELECT MONTH(order_date) AS month, COUNT(*) AS total_orders 
FROM Orders 
GROUP BY MONTH(order_date) 
HAVING COUNT(*) > 100;


Q10.
ANS:- SELECT category, SUM(sales) AS total_sales, AVG(sales) AS avg_sales 
FROM Sales 
GROUP BY category 
HAVING SUM(sales) > 100000;


Q11.
ANS:- a).total number of employees.


Q12.
ANS:- b).8


Q13.
ANS:- c).HAVING


Q14.
ANS:- b)returns all the rows from the left table and matching rows from the right table.


Q15.
ANS:- b)HELLO WORLD


Q16.
ANS:- SELECT c.region, SUM(o.total_amount) AS total_orders
FROM Orders o
JOIN Customers c ON o.customer_id = c.customer_id
GROUP BY c.region
HAVING SUM(o.total_amount) > 10000;


Q17.
ANS:- SELECT b.author_id, SUM(s.quantity) AS total_books_sold
FROM Sales s
JOIN Books b ON s.book_id = b.book_id
GROUP BY b.author_id
HAVING SUM(s.quantity) > 100;
